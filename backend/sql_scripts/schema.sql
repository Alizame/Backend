-- MySQL Script generated by MySQL Workbench
-- Thu May 14 20:45:24 2020
-- Model: Softwareprojekt Thiel    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`SmartContract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SmartContract` (
  `idSmartContract` INT NOT NULL,
  `blockchainAddrSmartContract` BINARY(20) NOT NULL COMMENT 'The address of the smart contract in the blockchain.\nEach smart contract in the blockchain has a unique address.',
  PRIMARY KEY (`idSmartContract`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Institution`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Institution` (
  `idInstitution` INT NOT NULL,
  `nameInstitution` VARCHAR(45) NOT NULL,
  `webpageInstitution` VARCHAR(256) NULL COMMENT 'Link to their external web page.',
  `fkSmartContractInstitution` INT NOT NULL,
  PRIMARY KEY (`idInstitution`),
  INDEX `fk_Institution_1_idx` (`fkSmartContractInstitution` ASC) VISIBLE,
  CONSTRAINT `fk_Institution_1`
    FOREIGN KEY (`fkSmartContractInstitution`)
    REFERENCES `mydb`.`SmartContract` (`idSmartContract`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Project` (
  `idProject` INT NOT NULL,
  `nameProject` VARCHAR(45) NOT NULL,
  `webpageProject` VARCHAR(256) NULL COMMENT 'Link to their external web page.',
  `fkSmartContractProject` INT NOT NULL,
  `fkInstitutionProject` INT NULL,
  PRIMARY KEY (`idProject`),
  INDEX `fk_Project_1_idx` (`fkSmartContractProject` ASC) VISIBLE,
  INDEX `fk_Project_2_idx` (`fkInstitutionProject` ASC) VISIBLE,
  CONSTRAINT `fk_Project_1`
    FOREIGN KEY (`fkSmartContractProject`)
    REFERENCES `mydb`.`SmartContract` (`idSmartContract`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_2`
    FOREIGN KEY (`fkInstitutionProject`)
    REFERENCES `mydb`.`Institution` (`idInstitution`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'A Project has a goal and milestones and raises money for those.';


-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `idUser` INT NOT NULL,
  `usernameUser` VARCHAR(45) NOT NULL COMMENT 'Unique user name.',
  `firstnameUser` VARCHAR(45) NOT NULL,
  `lastnameUser` VARCHAR(45) NOT NULL,
  `emailUser` VARCHAR(45) NOT NULL,
  `publickeyUser` BINARY(64) NULL COMMENT 'Public key of the Ethereum account of the user.',
  `privatekeyUser` BINARY(128) NULL COMMENT 'Private key of the user.\nHas to be saved encrypted with the key returned by Blockstack upon authorization.',
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `usernameUser_UNIQUE` (`usernameUser` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'Data for user accounts.\nAuthentication is handled by Blockstack, however some data is stored in our database.';


-- -----------------------------------------------------
-- Table `mydb`.`Transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Transaction` (
  `idTransaction` INT NOT NULL,
  `dateTransaction` TIMESTAMP NOT NULL COMMENT 'Time at which the transaction was recorded by the backend.',
  `fkSmartContractTransaction` INT NOT NULL,
  `fkUserTransaction` INT NULL,
  PRIMARY KEY (`idTransaction`),
  INDEX `fk_Transaction_1_idx` (`fkSmartContractTransaction` ASC) VISIBLE,
  INDEX `fk_Transaction_2_idx` (`fkUserTransaction` ASC) VISIBLE,
  CONSTRAINT `fk_Transaction_1`
    FOREIGN KEY (`fkSmartContractTransaction`)
    REFERENCES `mydb`.`SmartContract` (`idSmartContract`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transaction_2`
    FOREIGN KEY (`fkUserTransaction`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Saves all transaction that are received from the Blockchain or put forth by Web3.py.';


-- -----------------------------------------------------
-- Table `mydb`.`Voucher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Voucher` (
  `idVoucher` INT NOT NULL,
  `titleVoucher` VARCHAR(32) NOT NULL COMMENT 'Title of the voucher as saved in the blockchain.',
  `descriptionVoucher` VARCHAR(1024) NOT NULL COMMENT 'Longer description of the voucher. Not saved in the blockchain.',
  `usedVoucher` TINYINT NOT NULL COMMENT 'Whether the voucher has already been used.',
  `untilblockVoucher` INT NOT NULL COMMENT 'The block in the Ethereum blockchain until which the voucher can be used.',
  `fkInstitutionVoucher` INT NOT NULL,
  PRIMARY KEY (`idVoucher`),
  INDEX `fk_Voucher_1_idx` (`fkInstitutionVoucher` ASC) VISIBLE,
  CONSTRAINT `fk_Voucher_1`
    FOREIGN KEY (`fkInstitutionVoucher`)
    REFERENCES `mydb`.`Institution` (`idInstitution`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Milestone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Milestone` (
  `idMilestone` INT NOT NULL,
  `goalMilestone` INT NOT NULL COMMENT 'The goal in szabo.',
  `requiredVotesMilestone` INT NOT NULL COMMENT 'The number of required votes.',
  `currentVotesMilestone` INT NOT NULL COMMENT 'The number of present votes.',
  `untilBlockMilestone` INT NOT NULL COMMENT 'The number of the block (since the genesis block) until which votes can occur.',
  `fkProjectMilestone` INT NOT NULL,
  PRIMARY KEY (`idMilestone`),
  INDEX `fk_Milestone_1_idx` (`fkProjectMilestone` ASC) VISIBLE,
  CONSTRAINT `fk_Milestone_1`
    FOREIGN KEY (`fkProjectMilestone`)
    REFERENCES `mydb`.`Project` (`idProject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Projects have milestones and a goal. A goal is  a special milestone.';


-- -----------------------------------------------------
-- Table `mydb`.`VoucherUser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`VoucherUser` (
  `fkUserVoucherUser` INT NOT NULL,
  `fkVoucherVoucherUser` INT NOT NULL,
  PRIMARY KEY (`fkUserVoucherUser`, `fkVoucherVoucherUser`),
  INDEX `fk_VoucherUser_1_idx` (`fkVoucherVoucherUser` ASC) VISIBLE,
  INDEX `fk_VoucherUser_2_idx` (`fkUserVoucherUser` ASC) VISIBLE,
  CONSTRAINT `fk_VoucherUser_1`
    FOREIGN KEY (`fkVoucherVoucherUser`)
    REFERENCES `mydb`.`Voucher` (`idVoucher`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VoucherUser_2`
    FOREIGN KEY (`fkUserVoucherUser`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Stores the Vouchers a user has.';


-- -----------------------------------------------------
-- Table `mydb`.`Donation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Donation` (
  `idDonation` INT NOT NULL,
  `amountDonation` INT NOT NULL COMMENT 'Amount in szabo.',
  `fkMilestoneDonation` INT NOT NULL,
  `fkUserDonation` INT NOT NULL,
  PRIMARY KEY (`idDonation`),
  INDEX `fk_Donation_1_idx` (`fkMilestoneDonation` ASC) VISIBLE,
  INDEX `fk_Donation_2_idx` (`fkUserDonation` ASC) VISIBLE,
  CONSTRAINT `fk_Donation_1`
    FOREIGN KEY (`fkMilestoneDonation`)
    REFERENCES `mydb`.`Milestone` (`idMilestone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Donation_2`
    FOREIGN KEY (`fkUserDonation`)
    REFERENCES `mydb`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
